displayName: Record Types

get:
  description: >
  Get a listing of supported record types, either in summary or detail.

  A Record Type describes a type of record.  Each Record Type has a set of records of that type, and a set of searches that return specified sets of records of the type.  The sets of records and searches are available in sub-endpoints.  Record types, and their records and searches, are the primary means of accessing data through this API.

  Individual records serve their data through "attributes," which are single-valued (e.g. "age") and "tables," which are multi-valued (e.g. "friends").

  queryParameters:
    expand: if false, just return an array of record type names (url segments).  if true return full details of each record type, as well as full details of all searches.  This is the only endpoint that offers a full listing of both record types and searches.

/{recordType}:
  uriParameters: 
    recordType: 
      type: string
  get:
    description: >
    Get a detailed description of the specified record type.  This includes properties of the type, eg, whether it is displayable, and the attributes and tables that each record of this type will have.

  # TODO: this endpoint will be removed
  /answer-format:

  # TODO: this endpoint will be removed
  /attributes:
    get:
      responses:
        200:
          description: Success
          body:
            application/json:

  # TODO: do we need this endpoint?  this info can be gotten from the searches endpoint. (do we need a built-in search for ALL Records?)
  /count:
    get:
      responses: 
        200:
          description: Success
          body: 
            application/json:
                          
  # TODO: this endpoint will be changed to a GET
  /records:
    post:
      description: >
        (GET by POST) get the attributes and tables of a record instance.  If
        just the PK is supplied, gets all tables and attributes.  Otherwise,
        only get those that are explicitly specified.
      queryParameters:
        source_id:
        project:
        attributes:
        tables:
        categoriesFilter:
        internalFilter:
        inReportMakerFilter:
        tableNamesFilter:
        attributesNamesFilter:
      body:
        application/json:
          examples:
          - !include ../example/record-instance-1.json
          - !include ../example/record-instance-2.json
      responses: 
        200:
          description: Success
          body: 
            application/json:

  # TODO: do we need this endpoint? it is not in the java yet
  /{record-id}/section:
    uriParameters: 
      record-id: 
    get:
      description: data for a section or sections of a record page
      queryParameters:
        names:
          description: names of sections
          type: array
          items: string

    # TODO: do we need this endpoint?
    /{name}:
      uriParameters: 
        name: 
          description: name of section
      get:
        description: data for a section or sections of a record page

  # TODO: do we need this endpoint?
  /columns:
    get:
      description: >
        data for the columns this record can display (in different contexts)
      queryParameters:
        context:
          description: [resultList|reportMaker|etc]

  # TODO: do we need this endpoint?
  /columnsAndTables:
    get:
      description: Same as above, but returns both columns and tables
      queryParameters:
        context:
          description: [resultList|reportMaker|etc]

    # TODO: do we need this endpoint?
    /filters:
      get:
        description: filters available for results of this record class

  # TODO: do we need this endpoint?
  /tables:
    get:
      responses:
        200:
          description: Success
          body:
            application/json:
    # TODO: do we need this endpoint?
    /{tableName}:
      uriParameters: 
        tableName: 
          type: string
      get:
        responses: 
          200:
            description: Success
            body: 
              application/json:

      # TODO: do we need this endpoint?
      /attributes:
        get:
          responses:
            200:
              description: Success
              body:
                application/json:

