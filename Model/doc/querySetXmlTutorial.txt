
####################################################################
#  take a look at the xml file  (there is no DTD yet)
####################################################################

[sfischer@pythia ~]$ more $GUS_HOME/lib/xml/sampleQuerySet.xml 
<?xml version="1.0"?>
 
<querySet name="RNAQueries">

  <sqlQuery name="RNAByGoTerm"
            displayName="GO functional classification (by term)">

       <stringParam 
          name="GoTerm"
          prompt="Go Term"
          help="You know what it is"
          default="GO:"
          regex="GO:\d+"/>

       <sqlEnumParam
          name="Taxon"
          prompt="Organism"
          help="You know what it is"
          multipick="yes">
          <sqlQuery>
            <sql>
              select name as key,
                     taxon_id as value
              from SRes.taxonName
              where name in ('mouse', 'human')
            </sql>
          </sqlQuery>
       </sqlEnumParam>

    <sql>
      select distinct cd.na_sequence_id 
        from dots.GOAssociation ga, @ALLGENES_DB@.CentralDogma cd 
        where ga.go_term_id = $$GoTerm$$ 
        and ga.table_id = 180 
        and ga.row_id = cd.protein_id 
        and cd.taxon_id $$Taxon$$ 
        and ga.is_deprecated != 1 
        and ga.is_not != 1 
    </sql>

  </sqlQuery>



   <sqlQuery name="RNAListInDetail"
            displayName="RNAs">

       <stringParam  name="RNATable"/>
    <sql>
      select cd.gene_id, cd.taxon_name, cd.gene_symbol, 
             cd.gene_description, cd.na_sequence_id, cd.assembly_length, 
             cd.assembly_num_sequences, 
              cd.assembly_contains_mrna, cd.assembly_description 
      from @ALLGENES_DB@.CentralDogma cd, $$RNATable$$ ids 
      where cd.na_sequence_id = ids.na_sequence_id 
      order by cd.gene_id, cd.assembly_length desc
    </sql>
  </sqlQuery>

   <sqlQuery name="TaxonName"
            displayName="Taxon name">

     <stringParam
       name="TaxonId"
       prompt="Taxon Id"
       regex="\d+"/>

     <sql>
       select name
       from SRes.TaxonName 
       where taxon_id = $$TaxonId$$
     </sql>
  </sqlQuery>

</querySet>


####################################################################
# Get help for the querySetXml parser
####################################################################

[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ parseQuerySetXml

Parse a query set xml file

Usage: parseQuerySetXml xmlFile

Where:
  xmlFile:     the querySet xml file



####################################################################
#  Run the parser on the xml file.  It just dumps out the query set 
####################################################################

[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ parseQuerySetXml $GUS_HOME/lib/xml/sampleQuerySet.xml
QuerySet: name='RNAQueries'
--- Queries ---
SqlQuery: name='RNAListInDetail'
  displayName='RNAs'
  help='null'
  sql='select cd.gene_id, cd.taxon_name, cd.gene_symbol, 
             cd.gene_description, cd.na_sequence_id, cd.assembly_length, 
             cd.assembly_num_sequences, 
              cd.assembly_contains_mrna, cd.assembly_description 
      from @ALLGENES_DB@.CentralDogma cd, $$RNATable$$ ids 
      where cd.na_sequence_id = ids.na_sequence_id 
      order by cd.gene_id, cd.assembly_length desc'
--- Params ---
org.gusdb.wdk.model.query.StringParam: name='RNATable'
  prompt='null'
  help='null'
  default='null'
  sample='null'
  regex='null'


SqlQuery: name='TaxonName'
  displayName='Taxon name'
  help='null'
  sql='select name
       from SRes.TaxonName 
       where taxon_id = $$TaxonId$$'
--- Params ---
org.gusdb.wdk.model.query.StringParam: name='TaxonId'
  prompt='null'
  help='null'
  default='null'
  sample='null'
  regex='null'


SqlQuery: name='RNAByGoTerm'
  displayName='GO functional classification (by term)'
  help='null'
  sql='select distinct cd.na_sequence_id 
        from dots.GOAssociation ga, @ALLGENES_DB@.CentralDogma cd 
        where ga.go_term_id = $$GoTerm$$ 
        and ga.table_id = 180 
        and ga.row_id = cd.protein_id 
        and cd.taxon_id $$Taxon$$ 
        and ga.is_deprecated != 1 
        and ga.is_not != 1'
--- Params ---
org.gusdb.wdk.model.query.StringParam: name='GoTerm'
  prompt='Go Term'
  help='You know what it is'
  default='GO:'
  sample='GO:0001233'
  regex='GO:\d+'

org.gusdb.wdk.model.query.SqlEnumParam: name='Taxon'
  prompt='Organism'
  help='You know what it is'
  default='null'
  multiPick='null'
  sql='select name as key,
                    taxon_id as value
             from dots.taxon
             where name in ('mouse', 'horse', 'asparagus')'


####################################################################
# Get help for queryCache, the utility that creates a cache
####################################################################
[sfischer@pythia ~]$ queryCache

Create, reset or drop a query cache.
The name of the cache table is found in the configFile (the table
is placed in the schema owned by login).
Resetting the cache drops all results tables and deletes all rows from the cache table.
Dropping the cache first resets it then drops the cache table and sequence.

Usage: queryCache configFile --new | --reset | --drop

Where:
  configFile: an .xml file that specifies a ModelConfig object


####################################################################
# Create the query cache
####################################################################
[sfischer@pythia ~]$ queryCache $GUS_HOME/lib/xml/sampleModelConfig.xml --new

Making cache table sfischer.Queries with sql:
create table sfischer.Queries (query_id number(12) not null, query_name varchar2(100) not null, param0 varchar2(25), param1 varchar2(25), param2 varchar2(25), param3 varchar2(25), param4 varchar2(25), param5 varchar2(25), param6 varchar2(25), param7 varchar2(25), param8 varchar2(25), param9 varchar2(25), param10 varchar2(25), param11 varchar2(25), param12 varchar2(25), param13 varchar2(25), param14 varchar2(25), param15 varchar2(25), param16 varchar2(25), param17 varchar2(25), param18 varchar2(25), param19 varchar2(25), param20 varchar2(25), param21 varchar2(25), param22 varchar2(25), param23 varchar2(25), param24 varchar2(25), param25 varchar2(25), param26 varchar2(25), param27 varchar2(25), param28 varchar2(25), param29 varchar2(25), param30 varchar2(25), param31 varchar2(25), param32 varchar2(25), param33 varchar2(25), param34 varchar2(25), param35 varchar2(25), param36 varchar2(25), param37 varchar2(25), param38 varchar2(25), param39 varchar2(25), param40 varchar2(25), param41 varchar2(25), param42 varchar2(25), param43
varchar2(25), param44 varchar2(25), param45 varchar2(25), param46 varchar2(25),
param47 varchar2(25), param48 varchar2(25), param49 varchar2(25), result_table varchar2(30) not null, start_time date not null, end_time date, dataset_name varchar2(100), session_id varchar2(50))

Done

Creating sequence sfischer.Queries_pkseq

Done



[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ runQuerySetQuery                                                   
Run a query found in a query set xml file

Usage: runQuerySetQuery configFile xmlFile queryName paramName1 paramValue1 paramName2 ...

Where:
  configFile: a .xml file that specifies a ModelConfig object
  xmlFile:     the querySet xml file
  queryName:   a name of a query in that file
  paramName1:  name of a param for that query
  paramValue1: the value for that param
  etc
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 



####################################################################
#  Take a look at the expected config file 
####################################################################

[sfischer@pythia ~]$ more $GUS_HOME/lib/xml/sampleModelConfig.xml
<?xml version="1.0"?>

<modelConfig login="your_login_here"
             password="your_password_here"
             connectionUrl="jdbc:oracle:thin:@cbilbld.pcbi.upenn.edu:1521:cbilbld"
             queryInstanceTable="QueryInstance"
             maxQueryParams="50"
             platformClass="org.gusdb.wdk.model.query.Oracle"/>


####################################################################
# Run the query (the TaxonName query, with param TaxonId=14) 
####################################################################

[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ runQuerySetQuery $GUS_HOME/lib/xml/sampleModelConfig.xml $GUS_HOME/lib/xml/sampleQuerySet.xml TaxonName TaxonId 14
Mus musculus
LK3 transgenic mice
mouse
nude mice
Mus sp. 129SV
transgenic mice
Mus muscaris
house mouse
mice C57BL/6xCBA/CaJ hybrid
house mouse

####################################################################
# Get help for a query (run it without any supplied params)
# Note: in this example, the Organism param is an SqlEnumParam.
#       It queries the db to find the ids for the species in the xml
####################################################################

[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ runQuerySetQuery $GUS_HOME/lib/xml/sampleModelConfig.xml $GUS_HOME/lib/xml/sampleQuerySet.xml RNAByGoTerm

Query: GO functional classification (by term)

Parameters
  Go Term (GO:0001233):
  Organism (chose one):
    mouse = 14
    human = 8

####################################################################
# Get help for another query (run it without any supplied params)
####################################################################

[sfischer@pythia ~]$ runQuerySetQuery $GUS_HOME/lib/xml/sampleModelConfig.xml $GUS_HOME/lib/xml/sampleQuerySet.xml TaxonName

Query: Taxon name

Parameters
  Taxon Id (8):

####################################################################
# Try to run a non-existent query (spelling error)
####################################################################

[sfischer@pythia ~]$ runQuerySetQuery $GUS_HOME/lib/xml/sampleModelConfig.xml $GUS_HOME/lib/xml/sampleQuerySet.xml TaxonNam
java.lang.IllegalArgumentException: Query set 'RNAQueries' does not include a query named 'TaxonNam'
        at org.gusdb.wdk.model.query.QueryTester.displayQuery(QueryTester.java:48)
        at org.gusdb.wdk.model.query.QueryTester.main(QueryTester.java:148)



####################################################################
# Run the TaxonName query, but with an invalid param value
####################################################################

[sfischer@pythia ~]$ runQuerySetQuery $GUS_HOME/lib/xml/sampleModelConfig.xml $GUS_HOME/lib/xml/sampleQuerySet.xml TaxonName TaxonId oops

TaxonId value 'oops' has an error: Does not match regex '\d+'


####################################################################
# Run the TaxonName query correctly this time
####################################################################

[sfischer@pythia ~]$ runQuerySetQuery $GUS_HOME/lib/xml/sampleModelConfig.xml $GUS_HOME/lib/xml/sampleQuerySet.xml TaxonName TaxonId 8
human
man
Homo sapiens
human

 

####################################################################
#  take a look at the parseQuerySetXml shell script
####################################################################

[sfischer@pythia ~]$ more $PROJECT_HOME/GUS/WebDevKit/bin/parseQuerySetXml
#!/bin/csh

if ($#argv == 0) then
  echo ""
  echo "Parse a query set xml file"
  echo ""
  echo "Usage: parseQuerySetXml xmlFile"
  echo  ""
  echo "Where:"
  echo "  xmlFile: the querySet xml file"
  exit 1 
endif

setenv CLASSPATH "$GUS_HOME/lib/java/commons-digester.jar:$GUS_HOME/lib/java/GUS-WebDevK
it.jar:$GUS_HOME/lib/java/commons-beanutils.jar:$GUS_HOME/lib/java/commons-collections.j
ar:$GUS_HOME/lib/java/commons-logging-api.jar:$GUS_HOME/lib/java/xercesImpl.jar"

java -classpath $CLASSPATH org.gusdb.wdk.model.query.QuerySetParser $1



####################################################################
#  take a look at the runQuerySetQuery shell script
####################################################################

[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ more $PROJECT_HOME/GUS/WebDevKit/bin/runQuerySetQuery
#!/bin/csh

if ($#argv == 0) then
  echo ""
  echo "Run a query found in a query set xml file"
  echo ""
  echo "Usage: runQuerySetQuery configFile xmlFile queryName paramName1 paramValue1 para
mName2 ..."
  echo  ""
  echo "Where:"
  echo "  configFile: a .csh file that sets CONNECTION_URL LOGIN PASSWORD"
  echo "  xmlFile:     the querySet xml file"
  echo "  queryName:   a name of a query in that file"
  echo "  paramName1:  name of a param for that query" 
  echo "  paramValue1: the value for that param" 
  echo "  etc"
  exit 1 
endif

setenv CONFIG_FILE $argv[1]
shift
setenv XML_FILE $argv[1]
shift
setenv QUERYNAME $argv[1]
shift

# must set $CONNECTION_URL, $LOGIN, $PASSWORD
source $CONFIG_FILE

setenv CLASSPATH "$GUS_HOME/lib/java/commons-digester.jar:$GUS_HOME/lib/java/GUS-WebDevK
it.jar:$GUS_HOME/lib/java/commons-beanutils.jar:$GUS_HOME/lib/java/commons-collections.j
ar:$GUS_HOME/lib/java/commons-logging-api.jar:$GUS_HOME/lib/java/xercesImpl.jar:$GUS_HOM
E/lib/java/oracle-classes12.jar" 

java -classpath $CLASSPATH org.gusdb.wdk.model.query.QueryTester $CONNECTION_URL $LO
GIN $PASSWORD $XML_FILE $QUERYNAME $argv


####################################################################
#  A listing of the java classes that make it all happen 
####################################################################


[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ 
[sfischer@pythia ~]$ cd $PROJECT_HOME/GUS/WebDevKit/src/java/org.gusdb/wdk/model/query
[sfischer@pythia ~]$ 
[sfischer@pythia query]$ ls *.java
Param.java                 QuerySet.java        SqlQueryInstance.java
QueryInstance.java         QuerySetParser.java  SqlQuery.java
Query.java                 QueryTester.java     SqlResultSetManager.java
QueryParamsException.java  SqlEnumParam.java    StringParam.java


####################################################################
#  Create a javadocs for the Query model
####################################################################

[sfischer@pythia query]$ which makeWDKModelJavadoc
/home/sfischer/gushome/bin/makeWDKModelJavadoc

[sfischer@pythia query]$ makeWDKModelJavadoc /home/sfischer/jdoc/
Loading source files for package org.gusdb.wdk.model.query...
Constructing Javadoc information...
Standard Doclet version 1.4.0

Generating /home/sfischer/jdoc/constant-values.html...
Building tree for all the packages and classes...
Building index for all the packages and classes...
Generating /home/sfischer/jdoc/overview-tree.html...
Generating /home/sfischer/jdoc/index-all.html...
Generating /home/sfischer/jdoc/deprecated-list.html...
Building index for all classes...
Generating /home/sfischer/jdoc/allclasses-frame.html...
Generating /home/sfischer/jdoc/allclasses-noframe.html...
Generating /home/sfischer/jdoc/index.html...
Generating /home/sfischer/jdoc/packages.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/package-frame.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/package-summary.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/package-tree.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/Param.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/Query.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/QueryInstance.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/QuerySet.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/QuerySetParser.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/QueryTester.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/SqlEnumParam.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/SqlQuery.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/SqlQueryInstance.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/SqlResultSetManager.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/StringParam.html...
Generating /home/sfischer/jdoc/org.gusdb/wdk/model/query/QueryParamsException.html...
Generating /home/sfischer/jdoc/serialized-form.html...
Generating /home/sfischer/jdoc/package-list...
Generating /home/sfischer/jdoc/help-doc.html...
Generating /home/sfischer/jdoc/stylesheet.css...
