<project name="WDK" default="Installation" basedir=".">

	
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Installation  oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="WDK-Installation" depends="WDK/WSF-Installation,
                                           WDK/Model-Installation,
                                           WDK/Service-Installation">
    <ant target="defaultProjectInstall">
      <property name="project" value="WDK" />
    </ant>
  </target>


  <!-- oooooooooooooooooo  Installation Postprocess  ooooooooooooooooooooo -->

  <target name="WDK-Installation-postprocess">
    <echo message="Postprocessing the WDK installation" />

    <replace dir="${targetDir}/bin"
             propertyFile="${targetDir}/config/replacements.prop">
      <include name="**/*" />
      <replacefilter token="@perl@" property="perl" />
    </replace>

  </target>

  <!-- ooooooooooooooooooooooo  Install Components  ooooooooooooooooooooooo -->

  <target name="WDK/WSF-Installation">
    <ant target="defaultComponentInstall">
      <property name="project" value="WDK" />
      <property name="component" value="WSF" />
    </ant>
  </target>

  <target name="WDK/Model-Installation">

    <ant target="installOracleDriver" />

    <ant target="defaultComponentInstall">
      <property name="project" value="WDK" />
      <property name="component" value="Model" />
    </ant>
  </target>

  <target name="WDK/Service-Installation">
    <ant target="defaultComponentInstall">
      <property name="project" value="WDK" />
      <property name="component" value="Service" />
    </ant>
    <ant target="WDK-Service-Schema"/>
  </target>

  <target name="WDK-Service-Schema" depends="installYarnBin">
    <echo message="Resolving and merging JSON Schema files"/>
    <exec dir="${targetDir}/bin"
          executable="installSchema.sh"
          failonerror="true"
          failifexecutionfails="true">
      <arg line="${projectsDir} ${targetDir}"/>
    </exec>
    <ant target="createSchemaJar"/>
  </target>

  <target name="createSchemaJar">
    <echo message="Creating JSON schema jar file at ${targetDir}/lib/java/wdk-service-schema.jar"/>
    <mkdir dir="${targetDir}/lib/java"/>
    <exec dir="${targetDir}/doc/WDK/Service"
          executable="jar"
          failonerror="true"
          failifexecutionfails="true">
      <arg line="cf ${targetDir}/lib/java/wdk-service-schema.jar schema"/>
    </exec>
  </target>

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooo  Web Installation  oooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="WDK-WebInstallation" depends="GusHome,
                                              WDK/Service-WebInstallation">
    <echo message="." />
    <echo
      message="IMPORTANT REMINDER: If you have not already done so, please copy any .jar needed for database connectivity (such as the oracle file ojdbc14.jar) from ${targetDir}/lib/java/db_driver into your webapp server's designated place (such as common/lib for Tomcat). See the installation instructions available at www.gusdb.org/wdk for details." />
    <echo message="." />
  </target>

  <target name="WDK/Service-WebInstallation" depends="WDK/Service-Installation">
    <antcall target="runRaml2Html">
      <param name="inputFile" value="${targetDir}/doc/WDK/Service/raml/api.raml"/>
      <param name="outputFile" value="${htdocsTargetDir}/service-api.html"/>
    </antcall>
  </target>

  <target name="GusHome" depends="WDK-Installation,
                                  checkLinks,
                                  webInfDir,
                                  libLink,
                                  configLink,
                                  binLink,
                                  dataLink,
                                  buildlogLink,
                                  rngLink,
                                  perlLink,
                                  xmlLink,
                                  wdkLink"/>

  <target name="checkLinks">
    <available file="${webappTargetDir}/WEB-INF" property="webInfDirExists" />
    <available file="${webappTargetDir}/WEB-INF/lib" property="libLinkExists" />
    <available file="${webappTargetDir}/WEB-INF/wdk-model/config"
               property="configLinkExists" />
    <available file="${webappTargetDir}/WEB-INF/wdk-model/bin"
               property="binLinkExists" />
    <available file="${webappTargetDir}/WEB-INF/wdk-model/data"
               property="dataLinkExists" />
    <available file="${webappTargetDir}/WEB-INF/wdk-model/.buildlog"
               property="buildlogLinkExists" />
    <available file="${webappTargetDir}/WEB-INF/wdk-model/lib/rng"
               property="rngLinkExists" />
    <available file="${webappTargetDir}/WEB-INF/wdk-model/lib/perl"
               property="perlLinkExists" />
    <available file="${webappTargetDir}/WEB-INF/wdk-model/lib/xml"
               property="xmlLinkExists" />
    <available file="${webappTargetDir}/WEB-INF/wdk-model/lib/wdk"
               property="wdkLinkExists" />
  </target>

  <target name="webInfDir" unless="webInfDirExists">
    <mkdir dir="${webappTargetDir}/WEB-INF" />
  </target>

  <target name="libLink" unless="libLinkExists">
    <symlink link="${webappTargetDir}/WEB-INF/lib"
             resource="${targetDir}/lib/java" />
  </target>

  <target name="configLink" unless="configLinkExists">
    <mkdir dir="${webappTargetDir}/WEB-INF/wdk-model" />
    <symlink link="${webappTargetDir}/WEB-INF/wdk-model/config"
             resource="${targetDir}/config" />
  </target>

  <target name="binLink" unless="binLinkExists">
    <symlink link="${webappTargetDir}/WEB-INF/wdk-model/bin"
             resource="${targetDir}/bin" />
  </target>

  <target name="dataLink" unless="dataLinkExists">
    <symlink link="${webappTargetDir}/WEB-INF/wdk-model/data"
             resource="${targetDir}/data" />
  </target>

  <target name="buildlogLink" unless="buildlogLinkExists">
    <symlink link="${webappTargetDir}/WEB-INF/wdk-model/.buildlog"
             resource="${targetDir}/.buildlog" />
  </target>

  <target name="rngLink" unless="rngLinkExists">
    <mkdir dir="${webappTargetDir}/WEB-INF/wdk-model/lib" />
    <symlink link="${webappTargetDir}/WEB-INF/wdk-model/lib/rng"
             resource="${targetDir}/lib/rng" />
  </target>

  <target name="perlLink" unless="perlLinkExists">
    <mkdir dir="${webappTargetDir}/WEB-INF/wdk-model/lib" />
    <symlink link="${webappTargetDir}/WEB-INF/wdk-model/lib/perl"
             resource="${targetDir}/lib/perl" />
  </target>

  <target name="xmlLink" unless="xmlLinkExists">
    <symlink link="${webappTargetDir}/WEB-INF/wdk-model/lib/xml"
             resource="${targetDir}/lib/xml" />
  </target>

  <target name="wdkLink" unless="wdkLinkExists">
    <symlink link="${webappTargetDir}/WEB-INF/wdk-model/lib/wdk"
             resource="${targetDir}/lib/wdk" />
  </target>

</project>

